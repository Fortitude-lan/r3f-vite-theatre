/*
 * @Descripttion: 
 * @version: Chevalier
 * @Author: 
 * @Date: 2024-08-19 09:32:33
 * @LastEditors: Chevalier
 * @LastEditTime: 2024-08-19 11:20:55
 */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/models/brittle-hollow.glb 
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import HologramMaterial from './Hologram/HologramMaterial';
const texturePaths = [
  { path: "/textures/brittle-hollow-texture/land1.webp", name: 'land1' },
  { path: "/textures/brittle-hollow-texture/land2.webp", name: 'land2' },
  { path: "/textures/brittle-hollow-texture/land3.webp", name: 'land3' },
  { path: "/textures/brittle-hollow-texture/land4.webp", name: 'land4' },
  { path: "/textures/brittle-hollow-texture/land5.webp", name: 'land5' },
  { path: "/textures/brittle-hollow-texture/land6.webp", name: 'land6' },
  { path: "/textures/brittle-hollow-texture/north.webp", name: 'northM' },
  { path: "/textures/brittle-hollow-texture/south.webp", name: 'southM' },
  { path: "/textures/brittle-hollow-texture/structures.webp", name: 'structuresM' }
];
export function BrittleHollow(props) {
  const { nodes, materials } = useGLTF('/models/brittle-hollow.glb')
  const textures = loadTextures();
  return (
    <group {...props} dispose={null}>
      <ambientLight intensity={2.5} />
      <directionalLight intensity={2} />
      <mesh geometry={nodes['land-piece-1'].geometry} rotation={[Math.PI / 2, 0, 0]} scale={0.012}>
        <meshStandardMaterial map={textures.land1} />
      </mesh>
      <mesh geometry={nodes['land-piece-2'].geometry} rotation={[-2.324, 1.251, -0.977]} scale={0.012}>
        <meshStandardMaterial map={textures.land2} />
      </mesh>
      <mesh geometry={nodes['land-piece-3'].geometry} rotation={[Math.PI / 2, 0, 0]} scale={0.012}>
        <meshStandardMaterial map={textures.land3} />
      </mesh>
      <mesh geometry={nodes['land-piece-4'].geometry} rotation={[0.591, -0.038, -0.072]} scale={0.012}>
        <meshStandardMaterial map={textures.land4} />
      </mesh>
      <mesh geometry={nodes['land-piece-5'].geometry} rotation={[Math.PI / 2, 0, 0]} scale={0.012}>
        <meshStandardMaterial map={textures.land5} />
      </mesh>
      <mesh geometry={nodes['land-piece-6'].geometry} rotation={[-Math.PI, 0, -1.693]} scale={0.012}>
        <meshStandardMaterial map={textures.land6} />
      </mesh>
      <mesh geometry={nodes['north-ice'].geometry} rotation={[Math.PI / 2, 0, 0]} scale={0.012}>
        <meshStandardMaterial map={textures.northM} />

      </mesh>
      <mesh geometry={nodes['south-ice'].geometry} rotation={[Math.PI / 2, 0, 0]} scale={0.012}>
        {/* <meshStandardMaterial map={textures.southM} /> */}
        <HologramMaterial />

      </mesh>
      <mesh geometry={nodes.structures.geometry} rotation={[1.911, -0.112, 1.66]} scale={0.012} >
        <meshStandardMaterial map={textures.structuresM} />
        {/* <HologramMaterial /> */}
      </mesh>
    </group >
  )
}

useGLTF.preload('/models/brittle-hollow.glb')

const loadTextures = () => {
  const textures = {};
  texturePaths.forEach(({ path, name }) => {
    textures[name] = useTexture(path);
    textures[name].flipY = false;
  });

  return textures;
};